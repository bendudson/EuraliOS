* A text editor for EuraliOS

EuraliOS really needs a simple text editor, to be able to start
doing useful things and changing the configuration from within
the operating system itself.

Ultimately it would probably be best to support a library like
[[https://github.com/crossterm-rs/crossterm][Crossterm]] or [[https://github.com/redox-os/termion][Termion]] (used in Redox OS), that many programs
can use to provide a terminal interface. For now we'll write a
simple editor, as an excuse to learn something about text editor
data structures.

* Command line arguments

Command-line arguments in Rust are collected by calling
=std::env::args()= (see the [[https://doc.rust-lang.org/book/ch12-01-accepting-command-line-arguments.html][Rust book]]).

#+begin_src rust
pub struct Args {
}

pub fn args() -> Args {
}

impl Iterator for Args {
    type Item = String;
    fn next(&mut self) -> Option<String> {
        None
    }
    fn size_hint(&self) -> (usize, Option<usize>) {
        (0, Some(0))
    }
}
#+end_src
